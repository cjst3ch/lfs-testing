#usda 1.0
(
    defaultPrim = "MTL_BF_CoverLeaves"
    upAxis = "Z"
)

def Material "MTL_BF_CoverLeaves" (
    assetInfo = {
        asset identifier = @../../../../../../Users/Starlab/Desktop/VERTICAL_SLICE_USD_GqRavine/USD/Assets/Game/MWBroadleafForest/Materials/Cover/MTL_BF_CoverLeaves.usda@
        string name = "MTL_BF_CoverLeaves"
        dictionary unreal = {
            string assetType = "MaterialInstanceConstant"
            string contentPath = "/Game/MWBroadleafForest/Materials/Cover/MTL_BF_CoverLeaves.MTL_BF_CoverLeaves"
            string engineVersion = "5.5.4-40574608+++UE5+Release-5.5"
            string exportTime = "2025.05.27-12.46.57"
        }
        string version = "3739ABBFFC40EF10EF9D673B7EAF4BBB6794741E"
    }
)
{
    token inputs:stPrimvarName = "st"
    token outputs:surface.connect = </MTL_BF_CoverLeaves/SurfaceShader.outputs:surface>
    token outputs:unreal:surface.connect = </MTL_BF_CoverLeaves/UnrealShader.outputs:out>

    def Shader "UnrealShader"
    {
        uniform token info:implementationSource = "sourceAsset"
        uniform asset info:unreal:sourceAsset = @/Game/MWBroadleafForest/Materials/Cover/MTL_BF_CoverLeaves.MTL_BF_CoverLeaves@
        token outputs:out
    }

    def Shader "SurfaceShader"
    {
        uniform token info:id = "UsdPreviewSurface"
        color3f inputs:diffuseColor.connect = </MTL_BF_CoverLeaves/diffuseTexture.outputs:rgb>
        float inputs:metallic = 0
        normal3f inputs:normal.connect = </MTL_BF_CoverLeaves/normalTexture.outputs:rgb>
        float inputs:opacity.connect = </MTL_BF_CoverLeaves/opacityTexture.outputs:r>
        float inputs:roughness.connect = </MTL_BF_CoverLeaves/roughnessTexture.outputs:r>
        token outputs:surface
    }

    def Shader "PrimvarReader"
    {
        uniform token info:id = "UsdPrimvarReader_float2"
        string inputs:varname.connect = </MTL_BF_CoverLeaves.inputs:stPrimvarName>
        token outputs:result
    }

    def Shader "diffuseTexture"
    {
        uniform token info:id = "UsdUVTexture"
        float4 inputs:fallback = (0, 0, 0, 1)
        asset inputs:file = @Textures/Game_MWBroadleafForest_Materials_Cover_MTL_BF_CoverLeaves_BaseColor.png@
        token inputs:sourceColorSpace = "sRGB"
        float2 inputs:st.connect = </MTL_BF_CoverLeaves/PrimvarReader.outputs:result>
        token inputs:wrapS = "repeat"
        token inputs:wrapT = "repeat"
        color3f outputs:rgb
    }

    def Shader "roughnessTexture"
    {
        uniform token info:id = "UsdUVTexture"
        float4 inputs:fallback = (0.5, 0.5, 0.5, 1)
        asset inputs:file = @Textures/Game_MWBroadleafForest_Materials_Cover_MTL_BF_CoverLeaves_Roughness.png@
        token inputs:sourceColorSpace = "raw"
        float2 inputs:st.connect = </MTL_BF_CoverLeaves/PrimvarReader.outputs:result>
        token inputs:wrapS = "repeat"
        token inputs:wrapT = "repeat"
        float outputs:r
    }

    def Shader "opacityTexture"
    {
        uniform token info:id = "UsdUVTexture"
        float4 inputs:fallback = (1, 1, 1, 1)
        asset inputs:file = @Textures/Game_MWBroadleafForest_Materials_Cover_MTL_BF_CoverLeaves_OpacityMask.png@
        token inputs:sourceColorSpace = "raw"
        float2 inputs:st.connect = </MTL_BF_CoverLeaves/PrimvarReader.outputs:result>
        token inputs:wrapS = "repeat"
        token inputs:wrapT = "repeat"
        float outputs:r
    }

    def Shader "normalTexture"
    {
        uniform token info:id = "UsdUVTexture"
        float4 inputs:fallback = (0, 0, 1, 1)
        asset inputs:file = @Textures/Game_MWBroadleafForest_Materials_Cover_MTL_BF_CoverLeaves_Normal.png@
        token inputs:sourceColorSpace = "raw"
        float2 inputs:st.connect = </MTL_BF_CoverLeaves/PrimvarReader.outputs:result>
        token inputs:wrapS = "repeat"
        token inputs:wrapT = "repeat"
        normal3f outputs:rgb
    }
}

